#!/usr/bin/expect

# Set or verify the next three items
set username "admin"
set address ""
set password ""

set timeout 5
set targetState [lindex $argv 0]
set correctCustom 0
log_user 0 # Comment line to see debugging

if { [llength $argv] == 0 } {
	send_user "Usage: power up|down|check|usual|xxxx\n"
	exit 1
}

if {[regexp {^([0-1])([0-1])([0-1])([0-1])$} $targetState -> dev1 dev2 dev3 dev4]} {
	set requestedState [concat $dev1 " " $dev2 " " $dev3 " " $dev4]
	send_user $requestedState\n
	set correctCustom 1
}

if { $targetState != "up" && $targetState != "down" && $targetState != "check" && $targetState != "usual" && $correctCustom != 1 } {
       send_user "Usage: power up|down|check|usual|xxxx\n"
       exit 1
}

if { $targetState  == "up" } {
	set powerState 1111
	send_user "\nPowering up!\n"
}
 
if { $targetState == "down" } {
	set powerState 0000
	send_user "\nPowering down!\n"
}

if { $targetState == "usual" } {
	set powerState 1011
	send_user "\nRounding up the usual suspects!\n"
}

if { $correctCustom == 1 } {
	set powerState $targetState
	send_user "\nAs you wish...\n"
}

spawn telnet "$address"

expect {
	timeout { send_user "\n***Command timed out waiting for initial prompt\n; exit 1 }
	"9258Telnet->" 
}

send "$username:$password\r"

expect {
	timeout { send_user "\n***Command timed out after sending username and password\n; exit 1 }
	"Username and password is ok!"
}

# If the user has chosen to check the power state this section is executed
if { $targetState == "check" } {
	send "getpower\r"
	expect {
		timeout { send_user "\n***Command timed out after sending getpower\n"; exit 1 }
		default { send_user "\nIt's a mess!\n" } # I don't feel like parsing all the possible combinations
		"Power Status : 0 0 0 0 " { send_user "\nEverything is powered off!\n" }
		"Power Status : 1 1 1 1 " { send_user "\nEverything is powered on!\n" }
		"Power Status : 1 0 1 1 " { send_user "\nWe've rounded up the usual suspects!\n" }
	}
} else { send "setpower p6=$powerState\r" }

# If the user has chosen to power up the ports this section will execute
if { $targetState == "up" } {
	expect {
		timeout { send_user "\n***Command timed out after sending power on command\n"; exit 1 }
		"Power Status : 1 1 1 1 "
	}
	send_user "\nEverything was powered up!\n"
}

# If the user has chosen to power down the ports this section will execute
if { $targetState == "down" } {
	expect {
		timeout { send_user "\n***Command timed out after sending power all off command\n"; exit 1 }
		"Power Status : 0 0 0 0 "
	}
	send_user "\nEverything was powered down!\n"
}

# If the user has chosen to power up the usual ports this section will execute
if { $targetState == "usual" } {
	expect {
		timeout { send_user "\n***Command timed out after sending 'usual' power on command\n"; exit 1 }
		"Power Status : 1 0 1 1 "
	}
	send_user "\nWe've rounded up the usual suspects!\n"
}

# If the user has chosen to enter a custom state we'll match the status
if { $correctCustom == 1 } {
	expect {
		timeout { send_user "\n***Power state does not match custom power on request\n"; exit 1 }
		"Power Status : $requestedState"
	}
	send_user "\nSet as you requested!\n"
}

send "exit\r"

close
